// Generated by Dagger (https://dagger.dev).
package com.example.weatherapplication.domain.util;

import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SharedPreferencesModule_ProvideSharedPreferencesManagerFactory implements Factory<SharedPreferencesManager> {
  private final SharedPreferencesModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public SharedPreferencesModule_ProvideSharedPreferencesManagerFactory(
      SharedPreferencesModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public SharedPreferencesManager get() {
    return provideSharedPreferencesManager(module, sharedPreferencesProvider.get());
  }

  public static SharedPreferencesModule_ProvideSharedPreferencesManagerFactory create(
      SharedPreferencesModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new SharedPreferencesModule_ProvideSharedPreferencesManagerFactory(module, sharedPreferencesProvider);
  }

  public static SharedPreferencesManager provideSharedPreferencesManager(
      SharedPreferencesModule instance, SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNullFromProvides(instance.provideSharedPreferencesManager(sharedPreferences));
  }
}
